cmake_minimum_required(VERSION 2.6)
PROJECT(XRNetwork)

SET(Boost_USE_STATIC_LIBS OFF)
SET(boost_USE_MULTITHREAD ON)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS ON)
SET(THREADS_PREFER_PTHREAD_FLAG ON)

FIND_PACKAGE(Boost 1.70.0 REQUIRED COMPONENTS system thread filesystem log)
FIND_PACKAGE(Threads REQUIRED)

IF(Boost_FOUND)
  INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
  LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
ENDIF(Boost_FOUND)
      
SET(USE_LIBS ${Boost_SYSTEM_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_REGEX_LIBRARY})

if(MSVC)
  set(CMAKE_CXX_FAGS "${CMAKE_CXX_FLAGS} /std:c++17")
endif(MSCV)

if(LINUX)
  set(CMAKE_CXX_FAGS "${CMAKE_CXX_FLAGS} -std:c++17")
endif(LINUX)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wno-reorder -Wno-memset-elt-size")

ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)

ADD_EXECUTABLE(service nr_service_console.cpp)
TARGET_LINK_LIBRARIES(service PRIVATE Threads::Threads)
TARGET_LINK_LIBRARIES(service ${USED_LIBS} Boost::log)

ADD_EXECUTABLE(client nr_client.cpp)
TARGET_LINK_LIBRARIES(client ${USED_LIBS} Threads::Threads Boost::log)
